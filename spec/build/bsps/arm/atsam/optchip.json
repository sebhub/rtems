{
  "SPDX-License-Identifier": "CC-BY-SA-4.0 OR BSD-2-Clause",
  "actions": [
    {
      "get-string": null
    },
    {
      "script": "c = (\"__SAMV71Q21__\", 0x00200000, 0x00060000)\nchips = {\n    \"same70j19\": (\"__SAME70J19__\", 0x00080000, 0x00040000),\n    \"same70j20\": (\"__SAME70J20__\", 0x00100000, 0x00060000),\n    \"same70j21\": (\"__SAME70J21__\", 0x00200000, 0x00060000),\n    \"same70n19\": (\"__SAME70N19__\", 0x00080000, 0x00040000),\n    \"same70n20\": (\"__SAME70N20__\", 0x00100000, 0x00060000),\n    \"same70n21\": (\"__SAME70N21__\", 0x00200000, 0x00060000),\n    \"same70q19\": (\"__SAME70Q19__\", 0x00080000, 0x00040000),\n    \"same70q20\": (\"__SAME70Q20__\", 0x00100000, 0x00060000),\n    \"same70q21\": (\"__SAME70Q21__\", 0x00200000, 0x00060000),\n    \"sams70j19\": (\"__SAMS70J19__\", 0x00080000, 0x00040000),\n    \"sams70j20\": (\"__SAMS70J20__\", 0x00100000, 0x00060000),\n    \"sams70j21\": (\"__SAMS70J21__\", 0x00200000, 0x00060000),\n    \"sams70n19\": (\"__SAMS70N19__\", 0x00080000, 0x00040000),\n    \"sams70n20\": (\"__SAMS70N20__\", 0x00100000, 0x00060000),\n    \"sams70n21\": (\"__SAMS70N21__\", 0x00200000, 0x00060000),\n    \"sams70q19\": (\"__SAMS70Q19__\", 0x00080000, 0x00040000),\n    \"sams70q20\": (\"__SAMS70Q20__\", 0x00100000, 0x00060000),\n    \"sams70q21\": (\"__SAMS70Q21__\", 0x00200000, 0x00060000),\n    \"samv71j19\": (\"__SAMV71J19__\", 0x00080000, 0x00040000),\n    \"samv71j20\": (\"__SAMV71J20__\", 0x00100000, 0x00060000),\n    \"samv71j21\": (\"__SAMV71J21__\", 0x00200000, 0x00060000),\n    \"samv71n19\": (\"__SAMV71N19__\", 0x00080000, 0x00040000),\n    \"samv71n20\": (\"__SAMV71N20__\", 0x00100000, 0x00060000),\n    \"samv71n21\": (\"__SAMV71N21__\", 0x00200000, 0x00060000),\n    \"samv71q19\": (\"__SAMV71Q19__\", 0x00080000, 0x00040000),\n    \"samv71q20\": (\"__SAMV71Q20__\", 0x00100000, 0x00060000),\n    \"samv71q21\": c,\n}\nif value:\n    try:\n        c = chips[value]\n    except:\n        conf.fatal(\"Unkown chip variant '{}'\".format(value))\nconf.define_cond(c[0], True)\nconf.env[\"ATSAM_MEMORY_INTFLASH_SIZE\"] = c[1]\nconf.env[\"ATSAM_MEMORY_INTSRAM_SIZE\"] = c[2]\n"
    }
  ],
  "build-type": "option",
  "copyrights": [
    "Copyright (C) 2020 embedded brains GmbH (http://www.embedded-brains.de)"
  ],
  "default": [
    {
      "enabled-by": true,
      "value": "samv71q21"
    }
  ],
  "description": "Chip variant\n",
  "enabled-by": true,
  "format": "{}",
  "links": [],
  "name": "ATSAM_CHIP",
  "type": "build"
}