{
  "SPDX-License-Identifier": "CC-BY-SA-4.0 OR BSD-2-Clause",
  "build-type": "config-file",
  "content": "MEMORY {\n  NULL        : ORIGIN = 0x00000000, LENGTH = ${STM32H7_MEMORY_NULL_SIZE:#010x}\n  ITCM        : ORIGIN = ${STM32H7_MEMORY_NULL_SIZE:#010x}, LENGTH = ${STM32H7_MEMORY_ITCM_SIZE:#010x}\n  FLASH       : ORIGIN = ${STM32H7_MEMORY_FLASH_ORIGIN:#010x}, LENGTH = ${STM32H7_MEMORY_FLASH_SIZE:#010x}\n  DTCM        : ORIGIN = 0x20000000, LENGTH = ${STM32H7_MEMORY_DTCM_SIZE:#010x}\n  SRAM_AXI    : ORIGIN = 0x24000000, LENGTH = ${STM32H7_MEMORY_SRAM_AXI_SIZE:#010x}\n  SRAM_1      : ORIGIN = 0x30000000, LENGTH = ${STM32H7_MEMORY_SRAM_1_SIZE:#010x}\n  SRAM_2      : ORIGIN = 0x30020000, LENGTH = ${STM32H7_MEMORY_SRAM_2_SIZE:#010x}\n  SRAM_3      : ORIGIN = 0x30040000, LENGTH = ${STM32H7_MEMORY_SRAM_3_SIZE:#010x}\n  SRAM_4      : ORIGIN = 0x38000000, LENGTH = ${STM32H7_MEMORY_SRAM_4_SIZE:#010x}\n  SRAM_BACKUP : ORIGIN = 0x38800000, LENGTH = ${STM32H7_MEMORY_SRAM_BACKUP_SIZE:#010x}\n  PERIPHERAL  : ORIGIN = 0x40000000, LENGTH = ${STM32H7_MEMORY_PERIPHERAL_SIZE:#010x}\n  NOR         : ORIGIN = 0x60000000, LENGTH = ${STM32H7_MEMORY_NOR_SIZE:#010x}\n  SDRAM_1     : ORIGIN = 0x70000000, LENGTH = ${STM32H7_MEMORY_SDRAM_1_SIZE:#010x}\n  NAND        : ORIGIN = 0x80000000, LENGTH = ${STM32H7_MEMORY_NAND_SIZE:#010x}\n  QUADSPI     : ORIGIN = 0x90000000, LENGTH = ${STM32H7_MEMORY_QUADSPI_SIZE:#010x}\n  SDRAM_2     : ORIGIN = 0xd0000000, LENGTH = ${STM32H7_MEMORY_SDRAM_2_SIZE:#010x}\n}\n\nstm32h7_memory_null_begin = ORIGIN (NULL);\nstm32h7_memory_null_end = ORIGIN (NULL) + LENGTH (NULL);\nstm32h7_memory_null_size = LENGTH (NULL);\n\nstm32h7_memory_itcm_begin = ORIGIN (ITCM);\nstm32h7_memory_itcm_end = ORIGIN (ITCM) + LENGTH (ITCM);\nstm32h7_memory_itcm_size = LENGTH (ITCM);\n\nstm32h7_memory_flash_begin = ORIGIN (FLASH);\nstm32h7_memory_flash_end = ORIGIN (FLASH) + LENGTH (FLASH);\nstm32h7_memory_flash_size = LENGTH (FLASH);\n\nstm32h7_memory_dtcm_begin = ORIGIN (DTCM);\nstm32h7_memory_dtcm_end = ORIGIN (DTCM) + LENGTH (DTCM);\nstm32h7_memory_dtcm_size = LENGTH (DTCM);\n\nstm32h7_memory_sram_axi_begin = ORIGIN (SRAM_AXI);\nstm32h7_memory_sram_axi_end = ORIGIN (SRAM_AXI) + LENGTH (SRAM_AXI);\nstm32h7_memory_sram_axi_size = LENGTH (SRAM_AXI);\n\nstm32h7_memory_sram_1_begin = ORIGIN (SRAM_1);\nstm32h7_memory_sram_1_end = ORIGIN (SRAM_1) + LENGTH (SRAM_1);\nstm32h7_memory_sram_1_size = LENGTH (SRAM_1);\n\nstm32h7_memory_sram_2_begin = ORIGIN (SRAM_2);\nstm32h7_memory_sram_2_end = ORIGIN (SRAM_2) + LENGTH (SRAM_2);\nstm32h7_memory_sram_2_size = LENGTH (SRAM_2);\n\nstm32h7_memory_sram_3_begin = ORIGIN (SRAM_3);\nstm32h7_memory_sram_3_end = ORIGIN (SRAM_3) + LENGTH (SRAM_3);\nstm32h7_memory_sram_3_size = LENGTH (SRAM_3);\n\nstm32h7_memory_sram_4_begin = ORIGIN (SRAM_4);\nstm32h7_memory_sram_4_end = ORIGIN (SRAM_4) + LENGTH (SRAM_4);\nstm32h7_memory_sram_4_size = LENGTH (SRAM_4);\n\nstm32h7_memory_sram_backup_begin = ORIGIN (SRAM_BACKUP);\nstm32h7_memory_sram_backup_end = ORIGIN (SRAM_BACKUP) + LENGTH (SRAM_BACKUP);\nstm32h7_memory_sram_backup_size = LENGTH (SRAM_BACKUP);\n\nstm32h7_memory_peripheral_begin = ORIGIN (PERIPHERAL);\nstm32h7_memory_peripheral_end = ORIGIN (PERIPHERAL) + LENGTH (PERIPHERAL);\nstm32h7_memory_peripheral_size = LENGTH (PERIPHERAL);\n\nstm32h7_memory_nor_begin = ORIGIN (NOR);\nstm32h7_memory_nor_end = ORIGIN (NOR) + LENGTH (NOR);\nstm32h7_memory_nor_size = LENGTH (NOR);\n\nstm32h7_memory_sdram_1_begin = ORIGIN (SDRAM_1);\nstm32h7_memory_sdram_1_end = ORIGIN (SDRAM_1) + LENGTH (SDRAM_1);\nstm32h7_memory_sdram_1_size = LENGTH (SDRAM_1);\n\nstm32h7_memory_nand_begin = ORIGIN (NAND);\nstm32h7_memory_nand_end = ORIGIN (NAND) + LENGTH (NAND);\nstm32h7_memory_nand_size = LENGTH (NAND);\n\nstm32h7_memory_quadspi_begin = ORIGIN (QUADSPI);\nstm32h7_memory_quadspi_end = ORIGIN (QUADSPI) + LENGTH (QUADSPI);\nstm32h7_memory_quadspi_size = LENGTH (QUADSPI);\n\nstm32h7_memory_sdram_2_begin = ORIGIN (SDRAM_2);\nstm32h7_memory_sdram_2_end = ORIGIN (SDRAM_2) + LENGTH (SDRAM_2);\nstm32h7_memory_sdram_2_size = LENGTH (SDRAM_2);\n",
  "copyrights": [
    "Copyright (C) 2020 embedded brains GmbH (http://www.embedded-brains.de)"
  ],
  "enabled-by": true,
  "install-path": "${BSP_LIBDIR}",
  "links": [],
  "target": "linkcmds.memory",
  "type": "build"
}