{
  "SPDX-License-Identifier": "CC-BY-SA-4.0 OR BSD-2-Clause",
  "build-type": "script",
  "cflags": [],
  "copyrights": [
    "Copyright (C) 2020 embedded brains GmbH (http://www.embedded-brains.de)"
  ],
  "cppflags": [],
  "do-build": "path = \"testsuites/libtests/dl06/\"\npre_tar = path + \"dl06-pre.tar\"\nself.tar(bld, path + \"dl06_pre_file\", [path], pre_tar)\npre_tar_c, pre_tar_h = self.bin2c(bld, pre_tar, name=\"dl06_tar\")\nobjs = []\nobjs.append(self.cc(bld, bic, pre_tar_c))\nobjs.append(self.cc(bld, bic, path + \"pre-init.c\", deps=[pre_tar_h], cppflags=bld.env.TEST_DL06_CPPFLAGS))\ndl_load_o = self.cc(bld, bic, path + \"dl-load.c\")\nobjs.append(dl_load_o)\ndl06_pre = path + \"dl06.pre\"\nself.link_cc(bld, bic, objs, dl06_pre)\nobjs = []\nobjs.append(self.cc(bld, bic, path + \"dl06-o1.c\"))\nobjs.append(self.cc(bld, bic, path + \"dl06-o2.c\"))\ndl06_rap = path + \"dl06.rap\"\nself.rtems_rap(bld, dl06_pre, objs, [\"m\"], dl06_rap)\ntar = path + \"dl06.tar\"\nself.tar(bld, dl06_rap, [path], tar)\ntar_c, tar_h = self.bin2c(bld, tar)\nobjs = []\nobjs.append(self.cc(bld, bic, tar_c))\nobjs.append(self.cc(bld, bic, path + \"init.c\", deps=[tar_h], cppflags=bld.env.TEST_DL06_CPPFLAGS))\nobjs.append(dl_load_o)\ndl06_sym_o = path + \"dl06-sym.o\"\nobjs.append(dl06_sym_o)\nself.rtems_syms(bld, dl06_pre, dl06_sym_o)\nself.link_cc(bld, bic, objs, \"testsuites/libtests/dl06.exe\")\n",
  "do-configure": null,
  "enabled-by": [
    {
      "and": [
        {
          "not": "TEST_DL06_EXCLUDE"
        },
        "BUILD_LIBDL"
      ]
    }
  ],
  "includes": [
    "testsuites/libtests/dl06"
  ],
  "ldflags": [],
  "links": [],
  "prepare-build": null,
  "prepare-configure": null,
  "stlib": [],
  "type": "build",
  "use-after": [],
  "use-before": []
}